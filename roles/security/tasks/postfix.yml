---
- name: Postfix domain and TLS configuration
  block:
    # It is essential to configure Postfix via debconf beforehand to ensure
    # a non-interactive installation process and avoid manual prompts.
    # Currently this playbook uses the generic domain specified in the .env.sh file.
    # For full automation with a properly configured FQDN on the server,
    # the ansible_fqdn variable can be used instead.

    - name: Configure Postfix (Internet Site)
      debconf:
        name: postfix
        question: "{{ item.question }}"
        value: "{{ item.value }}"
        vtype: "{{ item.vtype }}"
      loop:
        - { question: "postfix/main_mailer_type", value: "Internet Site", vtype: "string" }
        - { question: "postfix/mailname", value: "{{ postfix_domain }}", vtype: "string" }
      loop_control:
        label: "{{ item.question }} = {{ item.value }}({{ item.vtype }})"
      tags:
        - config
        - install

    - name: Install Postfix
      ansible.builtin.apt:
        name: postfix
        state: present
        update_cache: true
      tags:
        - install

    - name: Set home_mailbox only for codespace testing
      ansible.builtin.lineinfile:
        path: /etc/postfix/main.cf
        regexp: '^home_mailbox\s*='
        line: 'home_mailbox = Maildir/'
        state: present
      when: is_codespace

    - name: Enable and start service (VM)
      ansible.builtin.systemd:
        name: postfix
        enabled: true
        state: started
      when: not is_codespace

    - name: Start Postfix service (Codespace)
      ansible.builtin.command: "service postfix start"
      when: is_codespace
      changed_when: false

    - name: Ensure /etc/mailname contains the correct domain
      ansible.builtin.copy:
        dest: /etc/mailname
        content: "{{ postfix_mailname }}\n"
        owner: root
        group: root
        mode: '0644'
        backup: true
      notify: 
        - restart_postfix_vm
        - restart_postfix_codespace
      tags:
        - config

    - name: Setup myorigin and mydestination in main.cf
      ansible.builtin.lineinfile:
        path: /etc/postfix/main.cf
        regexp: '^{{ item.key }}\s*='
        line: "{{ item.key }} = {{ item.value }}"
        state: present
        create: true
        backup: true
      loop:
        - { key: 'myorigin', value: "{{ postfix_myorigin }}" }
        - { key: 'mydestination', value: "{{ postfix_mydestination }}" }
      loop_control:
        label: "{{ item.key }} = {{ item.value }}"
      notify: 
        - restart_postfix_vm
        - restart_postfix_codespace
      tags:
        - config

    - name: Enable SMTPS (port 465) in Postfix master.cf
      ansible.builtin.blockinfile:
        path: /etc/postfix/master.cf
        block: |
          smtps      inet  n       -       y       -       -       smtpd
            -o syslog_name=postfix/smtps
            -o smtpd_tls_wrappermode=yes
            -o smtpd_tls_cert_file=/etc/ssl/certs/your_cert.pem
            -o smtpd_tls_key_file=/etc/ssl/private/your_key.pem
            -o smtpd_tls_security_level=encrypt
            -o smtpd_sasl_auth_enable=yes
            -o smtpd_client_restrictions=permit_sasl_authenticated,reject
        create: true
        backup: true
      notify:
        - restart_postfix_vm
        - restart_postfix_codespace
      tags:
        - config

    - name: SUCCESS -> Postfix domain settings applied successfully
      ansible.builtin.debug:
        msg: "Postfix domain settings applied successfully."
      tags:
        - config
        - success
        - success:stage

  rescue:
    - name: ERROR -> Postfix domain configuration failed
      ansible.builtin.fail:
        msg: "An error occurred while applying Postfix domain settings."
      tags:
        - config

  tags:
    - postfix